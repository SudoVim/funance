#!/usr/bin/env python3

from holdings.models import HoldingAccountDocument

documents = HoldingAccountDocument.objects.all()
documents

################################################################################

document = documents[1]
documents.pk

document = HoldingAccountDocument.objects.get(pk='34ee5eb7-87f8-4f11-a98f-4ab90d0f2e5d')
document

from holdings.fidelity import StatementParser

positions = StatementParser(document).parse_positions()
import pprint; pprint.pprint(positions.to_python())

################################################################################

from holdings.models import HoldingAccountDocument

# 2019
document = HoldingAccountDocument.objects.get(pk='2cfc38b4-aaa4-4a00-9d2d-c1fd506049db')
document

from holdings.fidelity import ActivityParser

aliases = {
        'TUP': 'TUPBQ',
        'SPI': 'SPIEF',
        '55003T107': 'LL',
        }
parser = ActivityParser(document, aliases=aliases)
positions = parser.parse_positions(positions)

import pprint; pprint.pprint(positions.to_python())

# 2020
document = HoldingAccountDocument.objects.get(pk='322a3c37-c737-44f8-988a-f58aa32ca2b4')
document

from holdings.fidelity import ActivityParser

parser = ActivityParser(document, aliases=aliases)
positions = parser.parse_positions(positions)

import pprint; pprint.pprint(positions.to_python())

# 2021
document = HoldingAccountDocument.objects.get(pk='d474763d-0199-498f-8fc7-1f36c4b57115')
document

from holdings.fidelity import ActivityParser

parser = ActivityParser(document, aliases=aliases)
positions = parser.parse_positions(positions)

import pprint; pprint.pprint(positions.to_python())

# 2022
document = HoldingAccountDocument.objects.get(pk='f3034334-1626-48eb-86f4-b5b06c26d552')
document

from holdings.fidelity import ActivityParser

account_number = "X50669288"
parser = ActivityParser(document, account_number=account_number, aliases=aliases)
positions = parser.parse_positions(positions)

import pprint; pprint.pprint(positions.to_python())

# 2023
document = HoldingAccountDocument.objects.get(pk='9c628774-de4f-4a36-a79a-01b038d074f1')
document

from holdings.fidelity import ActivityParser

parser = ActivityParser(document, account_number=account_number, aliases=aliases)
positions = parser.parse_positions(positions)

import pprint; pprint.pprint(positions.to_python())

# 2024
document = HoldingAccountDocument.objects.get(pk='597626ee-3fbc-4ed8-8c0b-476f1ca82933')
document

from holdings.fidelity import ActivityParser

parser = ActivityParser(document, account_number=account_number, aliases=aliases)
positions = parser.parse_positions(positions)

from decimal import Decimal

earnings_by_symbol = {}
for symbol, position in positions.positions.items():
    earnings = Decimal('0')
    for sale in position.sales:
        earnings += sale.profit()
    for generation in position.generations:
        earnings += generation.amount
    earnings_by_symbol[symbol] = earnings

earnings_by_symbol

s = sorted(list(earnings_by_symbol.items()), key=lambda e: e[1])
import pprint; pprint.pprint(s)

sum(earnings_by_symbol.values())

from holdings.positions import PositionSale, PositionGeneration
import datetime

today = datetime.date.today()
days = (today - positions.positions['FLDR'].actions[0].date).days
PositionSale.average_interest(list(positions.positions['FLDR'].sales))
PositionGeneration.average_interest(days, positions.positions['FLDR'].generations)

sum(s.profit() for s in positions.positions['FLDR'].sales)
sum(g.amount for g in positions.positions['FLDR'].generations)

import datetime
from decimal import Decimal

today = datetime.date.today()
price = Decimal('50')
pprint.pprint([
    (a.date, a.potential_interest(today, price),  a.quantity) for a in positions.positions['FLDR'].available_purchases
    ])

from holdings.positions import PositionAction

PositionAction.average_potential_interest(today, price, list(positions.positions['FLDR'].available_purchases))
